pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dind
    image: docker:24.0.5-dind
    securityContext:
      privileged: true
    volumeMounts:
      - name: docker-graph-storage
        mountPath: /var/lib/docker
    env:
      - name: DOCKER_TLS_CERTDIR
        value: ""
  - name: docker
    image: docker:24.0.5
    command:
      - cat
    tty: true
    volumeMounts:
      - name: docker-graph-storage
        mountPath: /var/lib/docker
      - name: docker-socket
        mountPath: /var/run/docker.sock
  volumes:
    - name: docker-graph-storage
      emptyDir: {}
    - name: docker-socket
      emptyDir: {}
"""
            defaultContainer 'docker'
        }
    }

    environment {
        DOCKER_IMAGE = "naveenbalagouni/my-python-app"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'your-github-credentials-id', branch: 'main', url: 'https://github.com/NaveenBalagouni/ssd-pratice.git'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                        docker version
                        docker build -t $DOCKER_IMAGE:latest .
                        docker push $DOCKER_IMAGE:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo '✅ Docker image built and pushed successfully!'
        }
        failure {
            echo '❌ There was an error during the build or push process.'
        }
    }
}
